Each month, Ill be posting a couple of new editorial-style columns here on Make: Online. These pieces are meant to get you thinking, to stir up discussion and debate, maybe even freak you out a little. My first column is called Why the Arduino Won and Why Its Here to Stay.In about a week, a rep from a large chip company is going to stop by and show me another Arduino-like platform, aka The Arduino Killer. This a pretty regular occurrence around here; every month or so theres a company or person who wants to make the next Arduino. They usually contact me because Ive covered the Arduino for years, helped get it in the maker world, and I use it daily in my work at Adafruit. I think its had an amazing impact on electronic hobbyists and artists, perhaps as much as the personal computer in the early days (Homebrew Computer Club, etc). There are more than 100,000+ Arduinos on the market, and by my estimates, a lot more when you add in the derivatives (approximately 150K as of 2/2011). Within the next 5 to 10 years, the Arduino will be used in every school to teach electronics and physical computing  thats my prediction. Theres no going back.Most of the time these Arduino-Killer brain-picking sessions end with well wishing, a list of things to consider if they want to kick Arduino in the pants, and thats that they usually never really do it. There are a few articles about Arduino, with some great history, but I want to address why it appears to have won. But, saying something will be the defacto standard is risky  its also too early, right? Saying something won will also cause some debate, and thats fine our new comments system works great now (so debate away). I think it won, Im going to tell you why and why its here to stay. If youre looking to make something to beat the Arduino, I got you covered heres your recipe. Lets get cooking!Arduino is an open-source electronics prototyping platform based on flexible, easy-to-use hardware and software. Its intended for artists, designers, hobbyists, and anyone interested in creating interactive objects or environments.Arduino can sense the environment by receiving input from a variety of sensors and can affect its surroundings by controlling lights, motors, and other actuators. The microcontroller on the board is programmed using the Arduino programming language (based on Wiring) and the Arduino development environment (based on Processing). Arduino projects can be stand-alone or they can communicate with software on running on a computer (e.g. Flash, Processing, MaxMSP).The boards can be built by hand or purchased preassembled; the software can be downloaded for free.